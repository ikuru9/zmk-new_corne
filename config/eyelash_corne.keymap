#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <1 2 3 4 5 14 15 16 17 18 29 30 31 32 33 0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33 42 43 44>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <7 8 9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41 45 46 47>;
            hold-trigger-on-release;
        };

        // Swapper for smart alt+tab

        swapper: swapper {
            compatible = "zmk,behavior-smart-toggle";
            #binding-cells = <0>;
            bindings = <&kp LALT>, <&kp TAB>;
        };

        ht_sw: ht_sw {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&swapper>;
        };

        rst_boot: rst_boot {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <500>;
            flavor = "tap-preferred";
            bindings = <&bootloader>, <&sys_reset>;
        };

        td_undo_redo: td_undo_redo {
            compatible = "zmk,behavior-tap-dance";
            label = "UNDO/REDO";
            #binding-cells = <0>;
            bindings = <&kp LC(Z)>, <&kp LC(LS(Z))>;
        };

        // Auto shift

        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <135>;
            flavor = "tap-preferred";
            bindings = <&shifted>, <&kp>;
        };

        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            label = "AUTOSHIFT_KP";
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    macros {
        shifted: macro_shifted_kp {
            #binding-cells = <1>;
            label = "MACRO_SHIFTED_KP";
            compatible = "zmk,behavior-macro-one-param";
            bindings =
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT>;
        };
    };

    combos {
        compatible = "zmk,combos";

        cut {
            bindings = <&kp LC(C)>;
            key-positions = <29 30>;
            layer = <0>
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&hml GRAVE ESC       &kp Q  &kp W  &kp E         &kp R      &kp T                               &kp UP                &kp Y        &kp U          &kp I         &kp O    &kp P     &kp MINUS
&td_undo_redo        &kp A  &kp S  &kp D         &kp F      &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J          &kp K         &kp L    &kp SEMI  &kp SQT
&hml LEFT_SHIFT TAB  &kp Z  &kp X  &kp C         &kp V      &kp B        &kp SPACE              &kp DOWN              &kp N        &kp M          &kp COMMA     &kp DOT  &kp FSLH  &kp LANG1
                                   &kp LEFT_ALT  &kp LCTRL  &lt 1 SPACE                                               &lt 2 ENTER  &kp BACKSPACE  &kp LEFT_GUI
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        number_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                         &trans          &kp N6   &kp N7   &kp N8  &kp N9  &kp N0   &none
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                 &trans  &trans  &trans  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &none
&trans  &none   &none   &none   &none   &kp F11  &kp C_MUTE            &trans          &kp F12  &none    &none   &none   &none    &none
                        &trans  &trans  &trans                                         &trans   &kp DEL  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        mouse_layer {
            display-name = "mouse";
            bindings = <
&studio_unlock  &kp F1  &kp F2     &kp F3     &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6  &kp F7     &kp F8     &kp F9           &kp F10         &kp F11
&none           &none   &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none   &mkp LCLK  &mkp MCLK  &mkp RCLK        &none           &kp F12
&none           &none   &none      &none      &none      &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &none   &none      &none      &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAUSE_BREAK
                                   &trans     &trans     &trans                                                                   &trans  &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        setting_layer {
            display-name = "Fn";
            bindings = <
&bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans          &none   &none   &none   &none  &none  &out OUT_TOG
&none            &none            &none         &none         &none         &none                   &trans  &trans  &trans  &none   &none   &none   &none  &none  &bootloader
&rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &none         &none         &none         &none         &trans            &trans          &none   &none   &none   &none  &none  &sys_reset
                                                &trans        &trans        &trans                                          &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
